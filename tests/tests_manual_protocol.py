__author__ = 'Clayton Daley'

import logging
logging.basicConfig(level=logging.DEBUG)
log = logging.getLogger("twisted-pyro.tests_manual")
log.info("Loading Application")

import pyro.protocol
from Pyro4.socketutil import getInterfaceAddress


class Foo(object):
    def ping(self):
        log.info("Foo was pinged!!!")
        return "pong"


class Bar(object):
    def ping(self):
        log.info("Bar was pinged!!!")
        return "bong"

factory = pyro.protocol.Pyro4ServerFactory()
tcp_port = pyro.protocol.reactor.listenTCP(5555, factory)
# Because the reactor is responsible for the actual TCP connection, we
# have to proactively route the data back into the factory to ensure
# that URIs generated by the factory include correct location data.
host = getInterfaceAddress("8.8.8.8")
port = tcp_port.getHost().port
log.debug("Setting PYRO Factory to host %s and port %d" % (host, port))
factory.setAddress(host, port)

foo = Foo()
bar = Bar()
fooId = factory.register(foo)
log.info("fooId is %s" % fooId)
barId = factory.register(bar)
log.info("barId is %s" % barId)

log.info("PYRO available on tcp_port %d" % tcp_port.getHost().port)
pyro.protocol.reactor.run()